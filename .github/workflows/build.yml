name: Build Pandoc WASM

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: 1. Install Base Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends \
          build-essential \
          python3 pkg-config libtinfo-dev libffi-dev libgmp-dev zlib1g-dev \
          cabal-install ghc \
          binaryen \
          ca-certificates \
          jq \
          unzip \
          zstd

    - name: 2. Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.19.0'
        
    - name: 3. Setup Wasmtime
      run: |
        curl https://wasmtime.dev/install.sh -sSf | bash
        echo "$HOME/.wasmtime/bin" >> $GITHUB_PATH
        
    - name: 4. Install Haskell Tools (alex, happy)
      run: |
        cabal update
        cabal install alex happy
        echo "$HOME/.cabal/bin" >> $GITHUB_PATH

    - name: 5. Install GHC for WebAssembly
      run: |
        curl -f -L --retry 10 --retry-delay 5 https://gitlab.haskell.org/haskell-wasm/ghc-wasm-meta/-/raw/master/bootstrap.sh | sh
        echo "$HOME/.ghc-wasm/bin" >> $GITHUB_PATH
        
    - name: 6. Checkout Your Code (Optional)
      uses: actions/checkout@v4
      # 如果你的仓库有需要构建的代码，请保留此步骤

    - name: 7. Clone Pandoc Repository
      uses: actions/checkout@v4
      with:
        repository: haskell-wasm/pandoc
        ref: wasm
        path: pandoc

    - name: 8. Build Pandoc
      shell: bash
      run: |
        source "$HOME/.ghc-wasm/env"
        
        cd pandoc
        
        echo "--- Running dry-run build ---"
        wasm32-wasi-cabal build pandoc-cli --dry-run
        
        echo "--- Running actual build ---"
        wasm32-wasi-cabal build pandoc-cli

    - name: 9. Optimize WASM file
      run: |
        mkdir -p dist
        PANDOC_WASM_PATH=$(find pandoc -type f -name pandoc.wasm)
        echo "Found pandoc.wasm at: $PANDOC_WASM_PATH"
        wasm-opt --converge --flatten -O2 "$PANDOC_WASM_PATH" -o dist/pandoc.wasm
        
    - name: 10. Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: pandoc-wasm
        path: dist/pandoc.wasm