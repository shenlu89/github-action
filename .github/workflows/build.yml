name: Build and Publish Pandoc WASM

on:
  push:
    tags: [ 'v*' ]
  pull_request:
    tags: [ 'v*' ]
  workflow_dispatch:

jobs:
  build:
    name: Build and Optimize Pandoc WASM
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup Haskell Tools (alex, happy)
        run: |
          pushd "$(mktemp -d)"
          cabal update
          cabal install alex happy
          cabal path --installdir >> "$GITHUB_PATH"
          popd

      - name: Setup GHC for WebAssembly
        run: |
          pushd "$(mktemp -d)"
          curl -f -L --retry 10 --retry-delay 5 https://gitlab.haskell.org/haskell-wasm/ghc-wasm-meta/-/raw/master/bootstrap.sh | sh
          ~/.ghc-wasm/add_to_github_path.sh
          popd

      - name: Setup Wasmtime
        run: |
          curl https://wasmtime.dev/install.sh -sSf | bash
          echo "$HOME/.wasmtime/bin" >> $GITHUB_PATH

      - name: Checkout Pandoc Repository
        uses: actions/checkout@v4
        with:
          repository: haskell-wasm/pandoc
          ref: wasm
          path: pandoc

      - name: Generate Cabal Build Plan
        run: |
          pushd pandoc
          wasm32-wasi-cabal build pandoc-cli --dry-run
          popd

      - name: Cache Cabal and Pandoc Build Artifacts
        uses: actions/cache@v4
        with:
          key: wasm-cabal-cache-${{ hashFiles('pandoc/dist-newstyle/cache/plan.json') }}
          restore-keys: wasm-cabal-cache-
          path: |
            ~/.cabal/store
            pandoc/dist-newstyle

      - name: Clean old build artifacts
        run: rm -rf pandoc/dist-newstyle

      - name: Build Pandoc with Wasm32-Wasi-GHC
        run: |
          pushd pandoc
          wasm32-wasi-cabal build pandoc-cli
          popd

      - name: Optimize WASM file
        run: |
          PANDOC_WASM_PATH=$(find pandoc -type f -name pandoc.wasm -printf "%T@ %p\n" | sort -n | tail -1 | cut -d' ' -f2-)
          echo "Found pandoc.wasm at: $PANDOC_WASM_PATH"
          wasm-opt --low-memory-unused --converge --gufa  --flatten --rereloop -Oz "$PANDOC_WASM_PATH" -o pandoc.wasm

      - name: Test the Optimized WASM file
        run: |
          wasmtime run --dir $PWD::/ -- pandoc.wasm pandoc/README.md -o pandoc/README.rst
          echo "--- Test output (first 20 lines of README.rst): ---"
          head --lines=20 pandoc/README.rst

      - name: Install npm dependencies
        run: npm ci

      # - name: Run tests
      #   run: npm test

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: pandoc-wasm
          path: |
            pandoc.wasm
            index.js
            cli.js
            index.d.ts
            package.json
          retention-days: 90

      - name: Publish to NPM (on tag)
        if: startsWith(github.ref, 'refs/tags/v')
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
